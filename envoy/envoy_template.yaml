admin:
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 8081 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                http_filters:
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        cognito_jwt_provider:
                          remote_jwks:
                            http_uri:
                              uri: https://cognito-idp.${REGION}.amazonaws.com/${USERPOOLID}/.well-known/jwks.json
                              cluster: cognito_jwks
                              timeout: 5s
                          forward: true
                          # jwt_cache_config:
                          #   jwt_cache_size: 100 # How many JWTs to cache #https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/jwt_authn/v3/config.proto#envoy-v3-api-msg-extensions-filters-http-jwt-authn-v3-jwtcacheconfig
                          # audiences: ["your_audience"]
                          # from_headers: # Authorization and Bearer are defaults
                          #   name: Authorization
                          #   value_prefix: Bearer
                      rules:
                        - match: # Add this without any requirement to ensure the healthcheck doesn't require auth
                            prefix: /healthcheck
                        - match:
                            prefix: /
                          requires:
                            provider_name: cognito_jwt_provider
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route: { cluster: my_app }

  clusters:
    - name: my_app
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: my_app
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8080
    - name: cognito_jwks
      type: STRICT_DNS
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: cognito_jwks
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: cognito-idp.${REGION}.amazonaws.com
                      port_value: 443
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: cognito-idp.${REGION}.amazonaws.com
